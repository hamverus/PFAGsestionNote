package com.pfagestionnote.model;

// Generated 11 avr. 2016 15:53:53 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Departement generated by hbm2java
 */
@Entity
@Table(name = "departement", catalog = "gestion_scolarite")
public class Departement implements java.io.Serializable {

	private int id;
	private String nom;
	private Set<ChefDepartement> chefDepartements = new HashSet<ChefDepartement>(
			0);
	private Set<Section> sections = new HashSet<Section>(0);
	private Set<Coordinateur> coordinateurs = new HashSet<Coordinateur>(0);

	public Departement() {
	}

	public Departement(int id) {
		this.id = id;
	}

	public Departement(int id, String nom,
			Set<ChefDepartement> chefDepartements, Set<Section> sections,
			Set<Coordinateur> coordinateurs) {
		this.id = id;
		this.nom = nom;
		this.chefDepartements = chefDepartements;
		this.sections = sections;
		this.coordinateurs = coordinateurs;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "nom", length = 45)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "departement")
	public Set<ChefDepartement> getChefDepartements() {
		return this.chefDepartements;
	}

	public void setChefDepartements(Set<ChefDepartement> chefDepartements) {
		this.chefDepartements = chefDepartements;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "departement")
	public Set<Section> getSections() {
		return this.sections;
	}

	public void setSections(Set<Section> sections) {
		this.sections = sections;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "departement")
	public Set<Coordinateur> getCoordinateurs() {
		return this.coordinateurs;
	}

	public void setCoordinateurs(Set<Coordinateur> coordinateurs) {
		this.coordinateurs = coordinateurs;
	}

}
